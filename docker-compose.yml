version: '3.8'

services:
  api:
    container_name: api_service
    build: ./main-application
    volumes:
      - ./main-application:/main-application
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
    ports:
      - "8000:8000"
    restart: unless-stopped

  celery_worker:
    container_name: celery_worker
    build: ./main-application
    volumes:
      - ./main-application:/main-application
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
    command: celery -A core.celery_app worker --loglevel=info
    restart: unless-stopped

  celery_beat:
    container_name: celery_beat
    build: ./main-application
    volumes:
      - ./main-application:/main-application
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
      - celery_worker
    command: celery -A core.celery_app beat --loglevel=info
    restart: unless-stopped

  redis:
    container_name: redis_instance
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data

  mongo:
    container_name: mongo_db
    image: mongo:6
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DB}
    ports:
      - "27017:27017"
    restart: unless-stopped

volumes:
  mongo-data:
  redis-data: